Simple wrapper for vmdb2, to build armhf & arm64 board images for SD-card using u-boot Debian packages, flash-kernel and Debian kernels.

******************************

Install right version of vmdb2 to use (see yaml file suffix).

Try the bullseye version : https://packages.debian.org/bullseye/vmdb2

Newer versions of vmdb2 are retro-compatible with older yaml files versions :
  - The 0.14.1 yaml files will work with version 0.14.1+ (0.16 for example) of vmdb2.

******************************

Ansible is needed to run.

You can always comment or remove the call to ansible roles in the yaml files if you don't want to install it.

******************************

Extra packages needed for cross-compile build (use of qemu-debootstrap in yaml, default):

qemu-user-static binfmt-support

You can always remplace qemu-debootstrap by debootstrap to build natively.

******************************

vmdb2 command example (working per yaml file example command on first line comment):

sudo vmdb2 board.yaml --output board.img --rootfs-tarball release_architecture_rootfs.tgz --log=stderr

******************************

To write img to sdcard, use dd.

For example : 
sudo dd bs=64k status=progress oflag=dsync if=cubietruck_buster_armhf.img of=/dev/mmcblk1

In case of img from Github build you could use something like that :
zcat cubietruck_buster_armhf.img.bz2.zip | bunzip2 -c -d | sudo dd bs=64k status=progress oflag=dsync of=/dev/mmcblk1

******************************

For Ansible use vmdb2-ansible.yaml.exemple as a starting point, create a file named vmdb2-ansible.yaml to write a playbook that will be used by vmdb2

******************************

If you face any issue when running the built image, try removing the corresponding cache file *.tbz and rebuilding the image

******************************

HOW-TO add a the support for a new board:
FIXME
Is the card supported by flash kernel ?
If not, ..., comment the rm of /etc/flash-kernel/machine, if not kernel update wont work
Same if flash-kernel cannot retrieve the card's name by looking in /proc/device-tree/model
For example in case something else than U-Boot is used as bootloader
FIXME
