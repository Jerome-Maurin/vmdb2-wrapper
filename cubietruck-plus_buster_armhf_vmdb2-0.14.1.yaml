# Use like this : sudo vmdb2 cubietruck-plus_buster_armhf_vmdb2-0.14.1.yaml --output cubietruck-plus_buster_armhf.img --rootfs-tarball buster_armhf_rootfs.tgz --log=stderr
steps:
  - mkimg: "{{ output }}"
    size: 3G

  - mklabel: msdos
    device: "{{ output }}"

  - mkpart: primary
    device: "{{ output }}"
    start: 0%
    end: 100%
    tag: root

  - kpartx: "{{ output }}"

  - mkfs: ext4
    partition: root

  - mount: root

  - unpack-rootfs: root

  - qemu-debootstrap: buster
    mirror: http://ftp.de.debian.org/debian
    target: root
    arch: armhf
    components:
    - main
    - contrib
    - non-free
    unless: rootfs_unpacked

  - apt: install
    packages:
      - initramfs-tools
    tag: root
    unless: rootfs_unpacked

  - chroot: root
    shell: |
      echo "deb http://security.debian.org/ buster/updates main contrib non-free" >> /etc/apt/sources.list
      echo "deb http://ftp.de.debian.org/debian buster-updates main contrib non-free" >> /etc/apt/sources.list
      echo "deb http://ftp.de.debian.org/debian buster-backports main contrib non-free" >> /etc/apt/sources.list
      apt-get update
      mv /etc/kernel/postinst.d/initramfs-tools /
      apt-get install -y -t buster-backports linux-image-armmp-lpae
      mv /initramfs-tools /etc/kernel/postinst.d/
    unless: rootfs_unpacked

  - apt: install
    packages:
      - flash-kernel
    tag: root
    unless: rootfs_unpacked

  - cache-rootfs: root
    unless: rootfs_unpacked

  - create-file: /etc/hostname
    contents: |+
      CubietruckPlus

  - fstab: root

  - create-file: /etc/flash-kernel/machine
    contents: |+
      Cubietech Cubietruck Plus

  - root-fs: root
    shell: |
      mount -o bind /dev/ $ROOT/dev/

  - chroot: root
    shell: |
      sed -i s_errors=remount-ro_noatime,nodiratime,errors=remount-ro_g /etc/fstab

      sed -i "s_quiet_root=$(grep ^UUID /etc/fstab | cut -d \  -f 1) net.ifnames=0_g" /etc/default/flash-kernel
      update-initramfs -c -k $(ls -l /vmlinuz | sed "s%^.*vmlinuz-\(.*\)$%\1%g")
      umount /dev/
      rm /etc/flash-kernel/machine

      sed -i "s_root:\*:_root::_g" /etc/shadow

  - apt: install
    packages:
      - u-boot-sunxi
    tag: root 

  - root-fs: root
    shell: |
      dd conv=fsync,notrunc if=$ROOT/usr/lib/u-boot/Cubietruck_plus/u-boot-sunxi-with-spl.bin of={{ output }} bs=1024 seek=8

  - create-file: /etc/network/interfaces.d/lo
    contents: |+
      auto lo
      iface lo inet loopback

  - create-file: /etc/network/interfaces.d/eth0
    contents: |+
      auto eth0
      iface eth0 inet dhcp

  - root-fs: root
    shell: |
      test -e vmdb2-ansible.yaml || ln -s vmdb2-ansible.yaml.example vmdb2-ansible.yaml

  - ansible: root
    playbook: vmdb2-ansible.yaml

  - root-fs: root
    shell: |
      diff vmdb2-ansible.yaml.example vmdb2-ansible.yaml && test -L vmdb2-ansible.yaml && rm vmdb2-ansible.yaml

  - create-file: /etc/resolv.conf
    contents: |
