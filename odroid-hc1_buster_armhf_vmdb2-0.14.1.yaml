# Use like this : sudo vmdb2 odroid-hc1_buster_armhf_vmdb2-0.14.1.yaml --output odroid-hc1_buster_armhf.img --rootfs-tarball buster_armhf_rootfs.tgz --log=stderr
steps:
  - mkimg: "{{ output }}"
    size: 3G

  - mklabel: msdos
    device: "{{ output }}"

  - mkpart: primary
    device: "{{ output }}"
    start: 0%
    end: 100%
    tag: root

  - kpartx: "{{ output }}"

  - mkfs: ext4
    partition: root

  - mount: root

  - unpack-rootfs: root

  - qemu-debootstrap: buster
    mirror: http://ftp.de.debian.org/debian
    target: root
    arch: armhf
    components:
    - main
    - contrib
    - non-free
    unless: rootfs_unpacked

  - apt: install
    packages:
      - initramfs-tools
    tag: root
    unless: rootfs_unpacked

  - chroot: root
    shell: |
      echo "deb http://security.debian.org/ buster/updates main contrib non-free" >> /etc/apt/sources.list
      echo "deb http://ftp.de.debian.org/debian buster-updates main contrib non-free" >> /etc/apt/sources.list
      echo "deb http://ftp.de.debian.org/debian buster-backports main contrib non-free" >> /etc/apt/sources.list
      apt-get update
      mv /etc/kernel/postinst.d/initramfs-tools /
      apt-get install -y -t buster-backports linux-image-armmp-lpae
      mv /initramfs-tools /etc/kernel/postinst.d/
    unless: rootfs_unpacked

  - apt: install
    packages:
      - flash-kernel
    tag: root
    unless: rootfs_unpacked

  - cache-rootfs: root
    unless: rootfs_unpacked

  - create-file: /etc/hostname
    contents: |+
      OdroidHc1

  - fstab: root

  - create-file: /etc/flash-kernel/machine
    contents: |+
      Hardkernel Odroid HC1

  - root-fs: root
    shell: |
      mount -o bind /dev/ $ROOT/dev/

  - chroot: root
    shell: |
      sed -i s_errors=remount-ro_noatime,nodiratime,errors=remount-ro_g /etc/fstab

      sed -i "s_quiet_root=$(grep ^UUID /etc/fstab | cut -d \  -f 1) net.ifnames=0_g" /etc/default/flash-kernel
      update-initramfs -c -k $(ls -l /vmlinuz | sed "s%^.*vmlinuz-\(.*\)$%\1%g")
      umount /dev/

      sed -i "s_root:\*:_root::_g" /etc/shadow

# We use the latest travis build official Hardkernel Odroid XU3/XU4/HC1 U-Boot
# With the machine file remaining in /etc/flash-kernel, the right dtb should be chosen to put in /boot/
  - root-fs: root
    shell: |
      curl -L -o $ROOT/u-boot.tar.gz https://github.com/hardkernel/u-boot/releases/download/travis%2Fodroidxu3-108/u-boot-odroidxu3-108.tar.gz
      tar xf $ROOT/u-boot.tar.gz -C $ROOT
      rm $ROOT/u-boot.tar.gz
      dd if=$ROOT/sd_fuse/bl1.bin.hardkernel of={{ output }} seek=1 conv=fsync,notrunc
      dd if=$ROOT/sd_fuse/bl2.bin.hardkernel.1mb_uboot of={{ output }} seek=31 conv=fsync,notrunc
      dd if=$ROOT/sd_fuse/u-boot.bin of={{ output }} bs=512 seek=63 conv=fsync,notrunc
      dd if=$ROOT/sd_fuse/tzsw.bin.hardkernel of={{ output }} seek=2111 conv=fsync,notrunc
      rm -r $ROOT/sd_fuse

  - create-file: /etc/network/interfaces.d/lo
    contents: |+
      auto lo
      iface lo inet loopback

  - create-file: /etc/network/interfaces.d/eth0
    contents: |+
      auto eth0
      iface eth0 inet dhcp

  - create-file: /etc/resolv.conf
    contents: |
